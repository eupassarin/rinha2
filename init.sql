-- CLIENTE
CREATE UNLOGGED TABLE IF NOT EXISTS CLIENTE (
     ID SERIAL PRIMARY KEY,
     LIMITE INT NOT NULL,
     SALDO INT DEFAULT 0
) WITH (FILLFACTOR = 70, AUTOVACUUM_ENABLED = FALSE);
ALTER TABLE CLIENTE DISABLE TRIGGER ALL;

INSERT INTO CLIENTE (ID, LIMITE) VALUES
 (1, 1000*100),(2, 800*100),(3, 10000*100),(4, 100000*100),(5, 5000*100);

-- TRANSACAO
CREATE UNLOGGED TABLE IF NOT EXISTS TRANSACAO (
    CLIENTE_ID INT NOT NULL,
    VALOR INT NOT NULL,
    TIPO CHAR(1) NOT NULL,
    DESCRICAO VARCHAR(10) NOT NULL,
    REALIZADA_EM TIMESTAMP DEFAULT NOW()
) WITH (FILLFACTOR = 70, AUTOVACUUM_ENABLED = FALSE);
ALTER TABLE TRANSACAO DISABLE TRIGGER ALL;
CREATE INDEX CLIENTE_IDX ON TRANSACAO (CLIENTE_ID) WITH (FILLFACTOR = 70) ;
CREATE INDEX CONCURRENTLY REALIZADA_EM_IDX ON TRANSACAO (REALIZADA_EM DESC) WITH (FILLFACTOR = 70) ;
CLUSTER TRANSACAO USING CLIENTE_IDX;

--PROCEDURE
CREATE OR REPLACE PROCEDURE T(
    CLIENTE_ID INT,
    VALOR INT,
    TIPO TEXT,
    DESCRICAO TEXT,
    VALOR_ABS INT,
    OUT NOVO_SALDO INT DEFAULT NULL)
    LANGUAGE plpgsql
AS $$
DECLARE
    LIMITE_VAL INT;
BEGIN
    SELECT LIMITE INTO LIMITE_VAL FROM CLIENTE WHERE ID = CLIENTE_ID;
    IF (VALOR >= 0 OR LIMITE_VAL + VALOR >= 0) THEN
        UPDATE CLIENTE SET SALDO = SALDO + VALOR WHERE ID = CLIENTE_ID;
        SELECT SALDO INTO NOVO_SALDO FROM CLIENTE WHERE ID = CLIENTE_ID;
        INSERT INTO TRANSACAO (CLIENTE_ID, VALOR, TIPO, DESCRICAO)
        VALUES (CLIENTE_ID, VALOR_ABS, TIPO, DESCRICAO);
    ELSE
        NOVO_SALDO := NULL;
    END IF;
END;
$$;

-- DATABASE
ALTER DATABASE RINHA SET SYNCHRONOUS_COMMIT=OFF;
