-- CLIENTE
CREATE UNLOGGED TABLE IF NOT EXISTS CLIENTE (
     ID SMALLINT,
     LIMITE INT NOT NULL,
     SALDO INT DEFAULT 0
);
ALTER TABLE CLIENTE DISABLE TRIGGER ALL;
CREATE INDEX CONCURRENTLY PK_CLIENTE_IDX ON CLIENTE (ID) INCLUDE (SALDO) WITH (FILLFACTOR = 100);
CLUSTER CLIENTE USING PK_CLIENTE_IDX;

INSERT INTO CLIENTE (ID, LIMITE) VALUES (1, 1000*100),(2, 800*100),(3, 10000*100),(4, 100000*100),(5, 5000*100);

-- TRANSACAO
CREATE UNLOGGED TABLE IF NOT EXISTS TRANSACAO (
    CLIENTE_ID SMALLINT NOT NULL,
    VALOR INT NOT NULL,
    TIPO CHAR(1) NOT NULL,
    DESCRICAO VARCHAR(10) NOT NULL,
    REALIZADA_EM BIGINT default (extract(epoch from now()) * 1000)
) WITH (FILLFACTOR = 70, AUTOVACUUM_ENABLED = TRUE);
ALTER TABLE TRANSACAO DISABLE TRIGGER ALL;
CREATE INDEX CLIENTE_IDX ON TRANSACAO (CLIENTE_ID) WITH (FILLFACTOR = 70) ;
CREATE INDEX CONCURRENTLY REALIZADA_EM_IDX ON TRANSACAO (REALIZADA_EM DESC) WITH (FILLFACTOR = 70) ;
CLUSTER TRANSACAO USING CLIENTE_IDX;

--PROCEDURE
CREATE OR REPLACE PROCEDURE T(
    IN CLIENTE_ID SMALLINT,
    IN VALOR INT,
    IN TIPO TEXT,
    IN DESCRICAO TEXT,
    IN VALOR_ABS INT,
    IN P_LIMITE INT,
    OUT NOVO_SALDO INT)
    LANGUAGE plpgsql
AS $$
BEGIN
    WITH saldo_atualizado AS (
        UPDATE CLIENTE
            SET SALDO = SALDO + VALOR
            WHERE ID = CLIENTE_ID AND SALDO + VALOR >= -P_LIMITE
            RETURNING SALDO
    )
    INSERT INTO TRANSACAO (CLIENTE_ID, VALOR, TIPO, DESCRICAO)
    SELECT CLIENTE_ID, VALOR_ABS, TIPO, DESCRICAO
    FROM saldo_atualizado
    RETURNING SALDO INTO NOVO_SALDO;

    IF NOT FOUND THEN NOVO_SALDO := NULL; END IF;
END;
$$;

-- DATABASE
ALTER DATABASE RINHA SET SYNCHRONOUS_COMMIT=OFF;
