-- CLIENTE
CREATE UNLOGGED TABLE IF NOT EXISTS CLIENTE (
     ID SMALLINT,
     LIMITE INT NOT NULL,
     SALDO INT DEFAULT 0
);
ALTER TABLE CLIENTE DISABLE TRIGGER ALL;
CREATE INDEX PK_CLIENTE_IDX ON CLIENTE (ID) INCLUDE (SALDO) WITH (FILLFACTOR = 100);
CLUSTER CLIENTE USING PK_CLIENTE_IDX;

INSERT INTO CLIENTE (ID, LIMITE) VALUES (1, 1000*100),(2, 800*100),(3, 10000*100),(4, 100000*100),(5, 5000*100);

-- TRANSACAO
CREATE UNLOGGED TABLE IF NOT EXISTS TRANSACAO (
    CLIENTE_ID SMALLINT NOT NULL,
    VALOR INT NOT NULL,
    TIPO CHAR(1) NOT NULL,
    DESCRICAO VARCHAR(10) NOT NULL,
    REALIZADA_EM BIGINT default (extract(epoch from now()) * 1000)
) WITH (FILLFACTOR = 70, AUTOVACUUM_ENABLED = TRUE);
ALTER TABLE TRANSACAO DISABLE TRIGGER ALL;
CREATE INDEX CLIENTE_IDX ON TRANSACAO (CLIENTE_ID) WITH (FILLFACTOR = 70) ;
CREATE INDEX REALIZADA_EM_IDX ON TRANSACAO (REALIZADA_EM DESC) WITH (FILLFACTOR = 70) ;
CLUSTER TRANSACAO USING CLIENTE_IDX;

--FUNCTION
CREATE OR REPLACE FUNCTION T(
    CLIENTE_ID SMALLINT,
    VALOR INT,
    TIPO TEXT,
    DESCRICAO TEXT,
    VALOR_ABS INT,
    P_LIMITE INT)
    RETURNS INT
    LANGUAGE plpgsql
AS $$
DECLARE
    saldo_atual INT;
    novo_saldo INT DEFAULT NULL;
BEGIN
    SELECT SALDO INTO saldo_atual
    FROM CLIENTE
    WHERE ID = CLIENTE_ID
    FOR SHARE;

    IF saldo_atual + VALOR >= -P_LIMITE THEN

        novo_saldo = saldo_atual + VALOR;

        UPDATE CLIENTE
        SET SALDO = novo_saldo
        WHERE ID = CLIENTE_ID;

        INSERT INTO TRANSACAO (CLIENTE_ID, VALOR, TIPO, DESCRICAO)
        VALUES (CLIENTE_ID, VALOR_ABS, TIPO, DESCRICAO);

    END IF;

    RETURN novo_saldo;
END;
$$;

-- DATABASE
ALTER DATABASE RINHA SET SYNCHRONOUS_COMMIT=OFF;
