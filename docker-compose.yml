version: '3.5'

x-resources-api: &resources-api
  resources:
    limits:
      cpus: '0.5'
      memory: 200M

#x-resources-db: &resources-db
#  resources:
#    limits:
#      cpus: '0.6'
#      memory: 400M

x-resources-nginx: &resources-nginx
  resources:
    limits:
      cpus: '0.5'
      memory: 100M

x-api: &api
  build: .
  env_file:
    - .env
  volumes:
    - ./temp:/temp
  deploy:
    <<: *resources-api

services:
  api01:
    <<: *api
    environment:
      HTTP_PORT: 8080
    ports:
      - "8080:8080"

  api02:
    <<: *api
    environment:
      HTTP_PORT: 8081
    ports:
      - "8081:8081"

#  haproxy:
#    hostname: lb
#    container_name: lb
#    network_mode: host
#    image: haproxy:alpine3.19
#    volumes:
#      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
#    depends_on:
#      - api01
#      - api02
#    ports:
#      - "9999:9999"
#    ulimits:
#      nofile:
#        soft: 1000000
#        hard: 1000000
#    deploy:
#      resources:
#        limits:
#          cpus: "0.5"
#          memory: "40MB"

  nginx:
    image: nginx:latest
    network_mode: host
    ports:
      - "9999:9999"
    depends_on:
      - api01
      - api02
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    deploy:
      <<: *resources-nginx

#  db:
#    image: postgres
#    network_mode: host
#    env_file:
#      - .env
#    command: |
#      postgres
#      -c config_file=/docker-entrypoint-initdb.d/postgresql.conf
#      -c fsync=off
#      -c synchronous_commit=off
#      -c full_page_writes=off
#    volumes:
#      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
#      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
#      - ./temp:/var/run/postgresql
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready" ]
#      interval: 5s
#      timeout: 5s
#      retries: 20
#      start_period: 10s
#    deploy:
#      <<: *resources-db

networks:
  default:
    driver: bridge
    name: rinhanet